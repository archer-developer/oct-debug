version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:12
    env_file:
      - .production.env
    environment:
      PG_DATA: /var/lib/postgresql/data
    ports:
      - '5432:5432'
    expose:
      - '5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  backend:
    image: backend
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .production.env
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:prod
    depends_on:
      - postgres
    expose:
      - '5001'
    restart: always

  nginx-proxy:
    restart: always
    image: jwilder/nginx-proxy
    ports:
      - 127.0.0.1:8080:80
      - 127.0.0.1:4443:443
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - './nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - './nginx/vhost.d:/etc/nginx/vhost.d'
    depends_on:
      - backend

volumes:
  pgdata:
